package test.gotop.crm.demo.dao.celltest.impl;

import java.util.HashMap;
import java.util.List;
import org.apache.log4j.Logger;
import com.gotop.util.dataSource.SqlMapClientDao;
import test.gotop.crm.demo.dao.celltest.IAcOperatorDAO;
import test.gotop.crm.demo.model.celltest.AcOperator;
import test.gotop.crm.demo.model.celltest.AcOperatorExample;

public class AcOperatorDAO extends SqlMapClientDao implements IAcOperatorDAO {
    /**
     * 
     * @abatorgenerated
     */
    protected Logger log = Logger.getLogger(AcOperatorDAO.class);;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table BKLS.AC_OPERATOR
     *
     * @abatorgenerated Thu Nov 17 15:57:59 CST 2011
     */
    public AcOperatorDAO() {
        super();
    }

    /**
     * 插入一条新数据
     * @abatorgenerated
     */
    public void insert(AcOperator record) {
        this.insert("BKLS_AC_OPERATOR.abatorgenerated_insert", record);
    }

    /**
     * 通过主键更新一条全部字段内容
     * @abatorgenerated
     */
    public int updateByPrimaryKey(AcOperator record) {
        int rows = this.update("BKLS_AC_OPERATOR.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * 通过主键更新部分字段，部分字段说明：当字段为null时不更新，当字段值为''空值是更新为空值
     * @abatorgenerated
     */
    public int updateByPrimaryKeySelective(AcOperator record) {
        int rows = this.update("BKLS_AC_OPERATOR.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * 通过查询实例，查询记录
     * @abatorgenerated
     */
    public List selectByExample(AcOperatorExample example) {
        List list = this.queryForList("BKLS_AC_OPERATOR.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * 通过Map方式的动态条件，查询分页数据
     * @abatorgenerated
     */
    public List selectByMapAndPage(HashMap example) {
        List list = this.queryForList("BKLS_AC_OPERATOR.abatorgenerated_selectByMapAndPage", example);
        return list;
    }

    /**
     * 通过Bean方式的动态条件，查询分页数据
     * @abatorgenerated
     */
    public List selectByExampleAndPage(AcOperator record, AcOperatorExample example) {
         UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
         List list = this.queryForList("BKLS_AC_OPERATOR.abatorgenerated_selectByExampleAndPage", parms);
        return list;
    }

    /**
     * 通过主键查询一条记录
     * @abatorgenerated
     */
    public AcOperator selectByPrimaryKey(Integer operatorid) {
        AcOperator key = new AcOperator();
        key.setOperatorid(operatorid);
        AcOperator record = (AcOperator) this.queryForObject("BKLS_AC_OPERATOR.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * 通过查询实例，删除数据
     * @abatorgenerated
     */
    public int deleteByExample(AcOperatorExample example) {
        int rows = this.delete("BKLS_AC_OPERATOR.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * 通过主键删除一条记录
     * @abatorgenerated
     */
    public int deleteByPrimaryKey(Integer operatorid) {
        AcOperator key = new AcOperator();
        key.setOperatorid(operatorid);
        int rows = this.delete("BKLS_AC_OPERATOR.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * 通过查询实例，统计总数
     * @abatorgenerated
     */
    public int countByExample(AcOperatorExample example) {
        Integer count = (Integer)  this.queryForObject("BKLS_AC_OPERATOR.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * 通过查询实例，更新非null字段
     * @abatorgenerated
     */
    public int updateByExampleSelective(AcOperator record, AcOperatorExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = this.update("BKLS_AC_OPERATOR.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * 通过查询实例，更新全部字段
     * @abatorgenerated
     */
    public int updateByExample(AcOperator record, AcOperatorExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = this.update("BKLS_AC_OPERATOR.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * 分页查询信息
     * @abatorgenerated
     */
    public List selectByDynamic(HashMap map) throws Exception {
        List list = this.queryForList("BKLS_AC_OPERATOR.abatorgenerated_selectByDynamic", map);
        return list;
    }

    /**
     * 批量提交开始
     * @abatorgenerated
     */
    public void startBatch() throws Exception {
        this.startBatch();
    }

    /**
     * 批量提交
     * @abatorgenerated
     */
    public void executeBatch() throws Exception {
        this.executeBatch();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table BKLS.AC_OPERATOR
     *
     * @abatorgenerated Thu Nov 17 15:57:59 CST 2011
     */
    private static class UpdateByExampleParms extends AcOperatorExample {
        private Object record;

        public UpdateByExampleParms(Object record, AcOperatorExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}