package com.gotop.tyjg.stable.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.apache.log4j.Logger;


public class OmGroupExample {
    /**
	 * @abatorgenerated
	 */
	protected Logger log = Logger.getLogger(OmGroupExample.class);
	/**
	 * 排序字段.
	 * @abatorgenerated
	 */
	protected String orderByClause;
	/**
	 * sql条件.
	 * @abatorgenerated
	 */
	protected List oredCriteria;
	/**
	 * 分页查询的起始行数.
	 * @abatorgenerated
	 */
	private Integer oracleStart;
	/**
	 * 分页查询结束行数.
	 * @abatorgenerated
	 */
	private Integer oracleEnd;

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table OM_GROUP
	 * @abatorgenerated  
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andGroupidIsNull() {
			addCriterion("GROUPID is null");
			return this;
		}

		public Criteria andGroupidIsNotNull() {
			addCriterion("GROUPID is not null");
			return this;
		}

		public Criteria andGroupidEqualTo(Long value) {
			addCriterion("GROUPID =", value, "groupid");
			return this;
		}

		public Criteria andGroupidNotEqualTo(Long value) {
			addCriterion("GROUPID <>", value, "groupid");
			return this;
		}

		public Criteria andGroupidGreaterThan(Long value) {
			addCriterion("GROUPID >", value, "groupid");
			return this;
		}

		public Criteria andGroupidGreaterThanOrEqualTo(Long value) {
			addCriterion("GROUPID >=", value, "groupid");
			return this;
		}

		public Criteria andGroupidLessThan(Long value) {
			addCriterion("GROUPID <", value, "groupid");
			return this;
		}

		public Criteria andGroupidLessThanOrEqualTo(Long value) {
			addCriterion("GROUPID <=", value, "groupid");
			return this;
		}

		public Criteria andGroupidIn(List values) {
			addCriterion("GROUPID in", values, "groupid");
			return this;
		}

		public Criteria andGroupidNotIn(List values) {
			addCriterion("GROUPID not in", values, "groupid");
			return this;
		}

		public Criteria andGroupidBetween(Long value1, Long value2) {
			addCriterion("GROUPID between", value1, value2, "groupid");
			return this;
		}

		public Criteria andGroupidNotBetween(Long value1, Long value2) {
			addCriterion("GROUPID not between", value1, value2, "groupid");
			return this;
		}

		public Criteria andOrgidIsNull() {
			addCriterion("ORGID is null");
			return this;
		}

		public Criteria andOrgidIsNotNull() {
			addCriterion("ORGID is not null");
			return this;
		}

		public Criteria andOrgidEqualTo(Long value) {
			addCriterion("ORGID =", value, "orgid");
			return this;
		}

		public Criteria andOrgidNotEqualTo(Long value) {
			addCriterion("ORGID <>", value, "orgid");
			return this;
		}

		public Criteria andOrgidGreaterThan(Long value) {
			addCriterion("ORGID >", value, "orgid");
			return this;
		}

		public Criteria andOrgidGreaterThanOrEqualTo(Long value) {
			addCriterion("ORGID >=", value, "orgid");
			return this;
		}

		public Criteria andOrgidLessThan(Long value) {
			addCriterion("ORGID <", value, "orgid");
			return this;
		}

		public Criteria andOrgidLessThanOrEqualTo(Long value) {
			addCriterion("ORGID <=", value, "orgid");
			return this;
		}

		public Criteria andOrgidIn(List values) {
			addCriterion("ORGID in", values, "orgid");
			return this;
		}

		public Criteria andOrgidNotIn(List values) {
			addCriterion("ORGID not in", values, "orgid");
			return this;
		}

		public Criteria andOrgidBetween(Long value1, Long value2) {
			addCriterion("ORGID between", value1, value2, "orgid");
			return this;
		}

		public Criteria andOrgidNotBetween(Long value1, Long value2) {
			addCriterion("ORGID not between", value1, value2, "orgid");
			return this;
		}

		public Criteria andParentgroupidIsNull() {
			addCriterion("PARENTGROUPID is null");
			return this;
		}

		public Criteria andParentgroupidIsNotNull() {
			addCriterion("PARENTGROUPID is not null");
			return this;
		}

		public Criteria andParentgroupidEqualTo(Long value) {
			addCriterion("PARENTGROUPID =", value, "parentgroupid");
			return this;
		}

		public Criteria andParentgroupidNotEqualTo(Long value) {
			addCriterion("PARENTGROUPID <>", value, "parentgroupid");
			return this;
		}

		public Criteria andParentgroupidGreaterThan(Long value) {
			addCriterion("PARENTGROUPID >", value, "parentgroupid");
			return this;
		}

		public Criteria andParentgroupidGreaterThanOrEqualTo(Long value) {
			addCriterion("PARENTGROUPID >=", value, "parentgroupid");
			return this;
		}

		public Criteria andParentgroupidLessThan(Long value) {
			addCriterion("PARENTGROUPID <", value, "parentgroupid");
			return this;
		}

		public Criteria andParentgroupidLessThanOrEqualTo(Long value) {
			addCriterion("PARENTGROUPID <=", value, "parentgroupid");
			return this;
		}

		public Criteria andParentgroupidIn(List values) {
			addCriterion("PARENTGROUPID in", values, "parentgroupid");
			return this;
		}

		public Criteria andParentgroupidNotIn(List values) {
			addCriterion("PARENTGROUPID not in", values, "parentgroupid");
			return this;
		}

		public Criteria andParentgroupidBetween(Long value1, Long value2) {
			addCriterion("PARENTGROUPID between", value1, value2,
					"parentgroupid");
			return this;
		}

		public Criteria andParentgroupidNotBetween(Long value1, Long value2) {
			addCriterion("PARENTGROUPID not between", value1, value2,
					"parentgroupid");
			return this;
		}

		public Criteria andGrouplevelIsNull() {
			addCriterion("GROUPLEVEL is null");
			return this;
		}

		public Criteria andGrouplevelIsNotNull() {
			addCriterion("GROUPLEVEL is not null");
			return this;
		}

		public Criteria andGrouplevelEqualTo(BigDecimal value) {
			addCriterion("GROUPLEVEL =", value, "grouplevel");
			return this;
		}

		public Criteria andGrouplevelNotEqualTo(BigDecimal value) {
			addCriterion("GROUPLEVEL <>", value, "grouplevel");
			return this;
		}

		public Criteria andGrouplevelGreaterThan(BigDecimal value) {
			addCriterion("GROUPLEVEL >", value, "grouplevel");
			return this;
		}

		public Criteria andGrouplevelGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("GROUPLEVEL >=", value, "grouplevel");
			return this;
		}

		public Criteria andGrouplevelLessThan(BigDecimal value) {
			addCriterion("GROUPLEVEL <", value, "grouplevel");
			return this;
		}

		public Criteria andGrouplevelLessThanOrEqualTo(BigDecimal value) {
			addCriterion("GROUPLEVEL <=", value, "grouplevel");
			return this;
		}

		public Criteria andGrouplevelIn(List values) {
			addCriterion("GROUPLEVEL in", values, "grouplevel");
			return this;
		}

		public Criteria andGrouplevelNotIn(List values) {
			addCriterion("GROUPLEVEL not in", values, "grouplevel");
			return this;
		}

		public Criteria andGrouplevelBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("GROUPLEVEL between", value1, value2, "grouplevel");
			return this;
		}

		public Criteria andGrouplevelNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("GROUPLEVEL not between", value1, value2, "grouplevel");
			return this;
		}

		public Criteria andGroupnameIsNull() {
			addCriterion("GROUPNAME is null");
			return this;
		}

		public Criteria andGroupnameIsNotNull() {
			addCriterion("GROUPNAME is not null");
			return this;
		}

		public Criteria andGroupnameEqualTo(String value) {
			addCriterion("GROUPNAME =", value, "groupname");
			return this;
		}

		public Criteria andGroupnameNotEqualTo(String value) {
			addCriterion("GROUPNAME <>", value, "groupname");
			return this;
		}

		public Criteria andGroupnameGreaterThan(String value) {
			addCriterion("GROUPNAME >", value, "groupname");
			return this;
		}

		public Criteria andGroupnameGreaterThanOrEqualTo(String value) {
			addCriterion("GROUPNAME >=", value, "groupname");
			return this;
		}

		public Criteria andGroupnameLessThan(String value) {
			addCriterion("GROUPNAME <", value, "groupname");
			return this;
		}

		public Criteria andGroupnameLessThanOrEqualTo(String value) {
			addCriterion("GROUPNAME <=", value, "groupname");
			return this;
		}

		public Criteria andGroupnameLike(String value) {
			addCriterion("GROUPNAME like", value, "groupname");
			return this;
		}

		public Criteria andGroupnameNotLike(String value) {
			addCriterion("GROUPNAME not like", value, "groupname");
			return this;
		}

		public Criteria andGroupnameIn(List values) {
			addCriterion("GROUPNAME in", values, "groupname");
			return this;
		}

		public Criteria andGroupnameNotIn(List values) {
			addCriterion("GROUPNAME not in", values, "groupname");
			return this;
		}

		public Criteria andGroupnameBetween(String value1, String value2) {
			addCriterion("GROUPNAME between", value1, value2, "groupname");
			return this;
		}

		public Criteria andGroupnameNotBetween(String value1, String value2) {
			addCriterion("GROUPNAME not between", value1, value2, "groupname");
			return this;
		}

		public Criteria andGroupdescIsNull() {
			addCriterion("GROUPDESC is null");
			return this;
		}

		public Criteria andGroupdescIsNotNull() {
			addCriterion("GROUPDESC is not null");
			return this;
		}

		public Criteria andGroupdescEqualTo(String value) {
			addCriterion("GROUPDESC =", value, "groupdesc");
			return this;
		}

		public Criteria andGroupdescNotEqualTo(String value) {
			addCriterion("GROUPDESC <>", value, "groupdesc");
			return this;
		}

		public Criteria andGroupdescGreaterThan(String value) {
			addCriterion("GROUPDESC >", value, "groupdesc");
			return this;
		}

		public Criteria andGroupdescGreaterThanOrEqualTo(String value) {
			addCriterion("GROUPDESC >=", value, "groupdesc");
			return this;
		}

		public Criteria andGroupdescLessThan(String value) {
			addCriterion("GROUPDESC <", value, "groupdesc");
			return this;
		}

		public Criteria andGroupdescLessThanOrEqualTo(String value) {
			addCriterion("GROUPDESC <=", value, "groupdesc");
			return this;
		}

		public Criteria andGroupdescLike(String value) {
			addCriterion("GROUPDESC like", value, "groupdesc");
			return this;
		}

		public Criteria andGroupdescNotLike(String value) {
			addCriterion("GROUPDESC not like", value, "groupdesc");
			return this;
		}

		public Criteria andGroupdescIn(List values) {
			addCriterion("GROUPDESC in", values, "groupdesc");
			return this;
		}

		public Criteria andGroupdescNotIn(List values) {
			addCriterion("GROUPDESC not in", values, "groupdesc");
			return this;
		}

		public Criteria andGroupdescBetween(String value1, String value2) {
			addCriterion("GROUPDESC between", value1, value2, "groupdesc");
			return this;
		}

		public Criteria andGroupdescNotBetween(String value1, String value2) {
			addCriterion("GROUPDESC not between", value1, value2, "groupdesc");
			return this;
		}

		public Criteria andGrouptypeIsNull() {
			addCriterion("GROUPTYPE is null");
			return this;
		}

		public Criteria andGrouptypeIsNotNull() {
			addCriterion("GROUPTYPE is not null");
			return this;
		}

		public Criteria andGrouptypeEqualTo(String value) {
			addCriterion("GROUPTYPE =", value, "grouptype");
			return this;
		}

		public Criteria andGrouptypeNotEqualTo(String value) {
			addCriterion("GROUPTYPE <>", value, "grouptype");
			return this;
		}

		public Criteria andGrouptypeGreaterThan(String value) {
			addCriterion("GROUPTYPE >", value, "grouptype");
			return this;
		}

		public Criteria andGrouptypeGreaterThanOrEqualTo(String value) {
			addCriterion("GROUPTYPE >=", value, "grouptype");
			return this;
		}

		public Criteria andGrouptypeLessThan(String value) {
			addCriterion("GROUPTYPE <", value, "grouptype");
			return this;
		}

		public Criteria andGrouptypeLessThanOrEqualTo(String value) {
			addCriterion("GROUPTYPE <=", value, "grouptype");
			return this;
		}

		public Criteria andGrouptypeLike(String value) {
			addCriterion("GROUPTYPE like", value, "grouptype");
			return this;
		}

		public Criteria andGrouptypeNotLike(String value) {
			addCriterion("GROUPTYPE not like", value, "grouptype");
			return this;
		}

		public Criteria andGrouptypeIn(List values) {
			addCriterion("GROUPTYPE in", values, "grouptype");
			return this;
		}

		public Criteria andGrouptypeNotIn(List values) {
			addCriterion("GROUPTYPE not in", values, "grouptype");
			return this;
		}

		public Criteria andGrouptypeBetween(String value1, String value2) {
			addCriterion("GROUPTYPE between", value1, value2, "grouptype");
			return this;
		}

		public Criteria andGrouptypeNotBetween(String value1, String value2) {
			addCriterion("GROUPTYPE not between", value1, value2, "grouptype");
			return this;
		}

		public Criteria andGroupseqIsNull() {
			addCriterion("GROUPSEQ is null");
			return this;
		}

		public Criteria andGroupseqIsNotNull() {
			addCriterion("GROUPSEQ is not null");
			return this;
		}

		public Criteria andGroupseqEqualTo(String value) {
			addCriterion("GROUPSEQ =", value, "groupseq");
			return this;
		}

		public Criteria andGroupseqNotEqualTo(String value) {
			addCriterion("GROUPSEQ <>", value, "groupseq");
			return this;
		}

		public Criteria andGroupseqGreaterThan(String value) {
			addCriterion("GROUPSEQ >", value, "groupseq");
			return this;
		}

		public Criteria andGroupseqGreaterThanOrEqualTo(String value) {
			addCriterion("GROUPSEQ >=", value, "groupseq");
			return this;
		}

		public Criteria andGroupseqLessThan(String value) {
			addCriterion("GROUPSEQ <", value, "groupseq");
			return this;
		}

		public Criteria andGroupseqLessThanOrEqualTo(String value) {
			addCriterion("GROUPSEQ <=", value, "groupseq");
			return this;
		}

		public Criteria andGroupseqLike(String value) {
			addCriterion("GROUPSEQ like", value, "groupseq");
			return this;
		}

		public Criteria andGroupseqNotLike(String value) {
			addCriterion("GROUPSEQ not like", value, "groupseq");
			return this;
		}

		public Criteria andGroupseqIn(List values) {
			addCriterion("GROUPSEQ in", values, "groupseq");
			return this;
		}

		public Criteria andGroupseqNotIn(List values) {
			addCriterion("GROUPSEQ not in", values, "groupseq");
			return this;
		}

		public Criteria andGroupseqBetween(String value1, String value2) {
			addCriterion("GROUPSEQ between", value1, value2, "groupseq");
			return this;
		}

		public Criteria andGroupseqNotBetween(String value1, String value2) {
			addCriterion("GROUPSEQ not between", value1, value2, "groupseq");
			return this;
		}

		public Criteria andStartdateIsNull() {
			addCriterion("STARTDATE is null");
			return this;
		}

		public Criteria andStartdateIsNotNull() {
			addCriterion("STARTDATE is not null");
			return this;
		}

		public Criteria andStartdateEqualTo(Date value) {
			addCriterion("STARTDATE =", value, "startdate");
			return this;
		}

		public Criteria andStartdateNotEqualTo(Date value) {
			addCriterion("STARTDATE <>", value, "startdate");
			return this;
		}

		public Criteria andStartdateGreaterThan(Date value) {
			addCriterion("STARTDATE >", value, "startdate");
			return this;
		}

		public Criteria andStartdateGreaterThanOrEqualTo(Date value) {
			addCriterion("STARTDATE >=", value, "startdate");
			return this;
		}

		public Criteria andStartdateLessThan(Date value) {
			addCriterion("STARTDATE <", value, "startdate");
			return this;
		}

		public Criteria andStartdateLessThanOrEqualTo(Date value) {
			addCriterion("STARTDATE <=", value, "startdate");
			return this;
		}

		public Criteria andStartdateIn(List values) {
			addCriterion("STARTDATE in", values, "startdate");
			return this;
		}

		public Criteria andStartdateNotIn(List values) {
			addCriterion("STARTDATE not in", values, "startdate");
			return this;
		}

		public Criteria andStartdateBetween(Date value1, Date value2) {
			addCriterion("STARTDATE between", value1, value2, "startdate");
			return this;
		}

		public Criteria andStartdateNotBetween(Date value1, Date value2) {
			addCriterion("STARTDATE not between", value1, value2, "startdate");
			return this;
		}

		public Criteria andEnddateIsNull() {
			addCriterion("ENDDATE is null");
			return this;
		}

		public Criteria andEnddateIsNotNull() {
			addCriterion("ENDDATE is not null");
			return this;
		}

		public Criteria andEnddateEqualTo(Date value) {
			addCriterion("ENDDATE =", value, "enddate");
			return this;
		}

		public Criteria andEnddateNotEqualTo(Date value) {
			addCriterion("ENDDATE <>", value, "enddate");
			return this;
		}

		public Criteria andEnddateGreaterThan(Date value) {
			addCriterion("ENDDATE >", value, "enddate");
			return this;
		}

		public Criteria andEnddateGreaterThanOrEqualTo(Date value) {
			addCriterion("ENDDATE >=", value, "enddate");
			return this;
		}

		public Criteria andEnddateLessThan(Date value) {
			addCriterion("ENDDATE <", value, "enddate");
			return this;
		}

		public Criteria andEnddateLessThanOrEqualTo(Date value) {
			addCriterion("ENDDATE <=", value, "enddate");
			return this;
		}

		public Criteria andEnddateIn(List values) {
			addCriterion("ENDDATE in", values, "enddate");
			return this;
		}

		public Criteria andEnddateNotIn(List values) {
			addCriterion("ENDDATE not in", values, "enddate");
			return this;
		}

		public Criteria andEnddateBetween(Date value1, Date value2) {
			addCriterion("ENDDATE between", value1, value2, "enddate");
			return this;
		}

		public Criteria andEnddateNotBetween(Date value1, Date value2) {
			addCriterion("ENDDATE not between", value1, value2, "enddate");
			return this;
		}

		public Criteria andGroupstatusIsNull() {
			addCriterion("GROUPSTATUS is null");
			return this;
		}

		public Criteria andGroupstatusIsNotNull() {
			addCriterion("GROUPSTATUS is not null");
			return this;
		}

		public Criteria andGroupstatusEqualTo(String value) {
			addCriterion("GROUPSTATUS =", value, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusNotEqualTo(String value) {
			addCriterion("GROUPSTATUS <>", value, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusGreaterThan(String value) {
			addCriterion("GROUPSTATUS >", value, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusGreaterThanOrEqualTo(String value) {
			addCriterion("GROUPSTATUS >=", value, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusLessThan(String value) {
			addCriterion("GROUPSTATUS <", value, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusLessThanOrEqualTo(String value) {
			addCriterion("GROUPSTATUS <=", value, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusLike(String value) {
			addCriterion("GROUPSTATUS like", value, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusNotLike(String value) {
			addCriterion("GROUPSTATUS not like", value, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusIn(List values) {
			addCriterion("GROUPSTATUS in", values, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusNotIn(List values) {
			addCriterion("GROUPSTATUS not in", values, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusBetween(String value1, String value2) {
			addCriterion("GROUPSTATUS between", value1, value2, "groupstatus");
			return this;
		}

		public Criteria andGroupstatusNotBetween(String value1, String value2) {
			addCriterion("GROUPSTATUS not between", value1, value2,
					"groupstatus");
			return this;
		}

		public Criteria andManagerIsNull() {
			addCriterion("MANAGER is null");
			return this;
		}

		public Criteria andManagerIsNotNull() {
			addCriterion("MANAGER is not null");
			return this;
		}

		public Criteria andManagerEqualTo(String value) {
			addCriterion("MANAGER =", value, "manager");
			return this;
		}

		public Criteria andManagerNotEqualTo(String value) {
			addCriterion("MANAGER <>", value, "manager");
			return this;
		}

		public Criteria andManagerGreaterThan(String value) {
			addCriterion("MANAGER >", value, "manager");
			return this;
		}

		public Criteria andManagerGreaterThanOrEqualTo(String value) {
			addCriterion("MANAGER >=", value, "manager");
			return this;
		}

		public Criteria andManagerLessThan(String value) {
			addCriterion("MANAGER <", value, "manager");
			return this;
		}

		public Criteria andManagerLessThanOrEqualTo(String value) {
			addCriterion("MANAGER <=", value, "manager");
			return this;
		}

		public Criteria andManagerLike(String value) {
			addCriterion("MANAGER like", value, "manager");
			return this;
		}

		public Criteria andManagerNotLike(String value) {
			addCriterion("MANAGER not like", value, "manager");
			return this;
		}

		public Criteria andManagerIn(List values) {
			addCriterion("MANAGER in", values, "manager");
			return this;
		}

		public Criteria andManagerNotIn(List values) {
			addCriterion("MANAGER not in", values, "manager");
			return this;
		}

		public Criteria andManagerBetween(String value1, String value2) {
			addCriterion("MANAGER between", value1, value2, "manager");
			return this;
		}

		public Criteria andManagerNotBetween(String value1, String value2) {
			addCriterion("MANAGER not between", value1, value2, "manager");
			return this;
		}

		public Criteria andCreatetimeIsNull() {
			addCriterion("CREATETIME is null");
			return this;
		}

		public Criteria andCreatetimeIsNotNull() {
			addCriterion("CREATETIME is not null");
			return this;
		}

		public Criteria andCreatetimeEqualTo(Object value) {
			addCriterion("CREATETIME =", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeNotEqualTo(Object value) {
			addCriterion("CREATETIME <>", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeGreaterThan(Object value) {
			addCriterion("CREATETIME >", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeGreaterThanOrEqualTo(Object value) {
			addCriterion("CREATETIME >=", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeLessThan(Object value) {
			addCriterion("CREATETIME <", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeLessThanOrEqualTo(Object value) {
			addCriterion("CREATETIME <=", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeIn(List values) {
			addCriterion("CREATETIME in", values, "createtime");
			return this;
		}

		public Criteria andCreatetimeNotIn(List values) {
			addCriterion("CREATETIME not in", values, "createtime");
			return this;
		}

		public Criteria andCreatetimeBetween(Object value1, Object value2) {
			addCriterion("CREATETIME between", value1, value2, "createtime");
			return this;
		}

		public Criteria andCreatetimeNotBetween(Object value1, Object value2) {
			addCriterion("CREATETIME not between", value1, value2, "createtime");
			return this;
		}

		public Criteria andLastupdateIsNull() {
			addCriterion("LASTUPDATE is null");
			return this;
		}

		public Criteria andLastupdateIsNotNull() {
			addCriterion("LASTUPDATE is not null");
			return this;
		}

		public Criteria andLastupdateEqualTo(Object value) {
			addCriterion("LASTUPDATE =", value, "lastupdate");
			return this;
		}

		public Criteria andLastupdateNotEqualTo(Object value) {
			addCriterion("LASTUPDATE <>", value, "lastupdate");
			return this;
		}

		public Criteria andLastupdateGreaterThan(Object value) {
			addCriterion("LASTUPDATE >", value, "lastupdate");
			return this;
		}

		public Criteria andLastupdateGreaterThanOrEqualTo(Object value) {
			addCriterion("LASTUPDATE >=", value, "lastupdate");
			return this;
		}

		public Criteria andLastupdateLessThan(Object value) {
			addCriterion("LASTUPDATE <", value, "lastupdate");
			return this;
		}

		public Criteria andLastupdateLessThanOrEqualTo(Object value) {
			addCriterion("LASTUPDATE <=", value, "lastupdate");
			return this;
		}

		public Criteria andLastupdateIn(List values) {
			addCriterion("LASTUPDATE in", values, "lastupdate");
			return this;
		}

		public Criteria andLastupdateNotIn(List values) {
			addCriterion("LASTUPDATE not in", values, "lastupdate");
			return this;
		}

		public Criteria andLastupdateBetween(Object value1, Object value2) {
			addCriterion("LASTUPDATE between", value1, value2, "lastupdate");
			return this;
		}

		public Criteria andLastupdateNotBetween(Object value1, Object value2) {
			addCriterion("LASTUPDATE not between", value1, value2, "lastupdate");
			return this;
		}

		public Criteria andUpdatorIsNull() {
			addCriterion("UPDATOR is null");
			return this;
		}

		public Criteria andUpdatorIsNotNull() {
			addCriterion("UPDATOR is not null");
			return this;
		}

		public Criteria andUpdatorEqualTo(Long value) {
			addCriterion("UPDATOR =", value, "updator");
			return this;
		}

		public Criteria andUpdatorNotEqualTo(Long value) {
			addCriterion("UPDATOR <>", value, "updator");
			return this;
		}

		public Criteria andUpdatorGreaterThan(Long value) {
			addCriterion("UPDATOR >", value, "updator");
			return this;
		}

		public Criteria andUpdatorGreaterThanOrEqualTo(Long value) {
			addCriterion("UPDATOR >=", value, "updator");
			return this;
		}

		public Criteria andUpdatorLessThan(Long value) {
			addCriterion("UPDATOR <", value, "updator");
			return this;
		}

		public Criteria andUpdatorLessThanOrEqualTo(Long value) {
			addCriterion("UPDATOR <=", value, "updator");
			return this;
		}

		public Criteria andUpdatorIn(List values) {
			addCriterion("UPDATOR in", values, "updator");
			return this;
		}

		public Criteria andUpdatorNotIn(List values) {
			addCriterion("UPDATOR not in", values, "updator");
			return this;
		}

		public Criteria andUpdatorBetween(Long value1, Long value2) {
			addCriterion("UPDATOR between", value1, value2, "updator");
			return this;
		}

		public Criteria andUpdatorNotBetween(Long value1, Long value2) {
			addCriterion("UPDATOR not between", value1, value2, "updator");
			return this;
		}

		public Criteria andIsleafIsNull() {
			addCriterion("ISLEAF is null");
			return this;
		}

		public Criteria andIsleafIsNotNull() {
			addCriterion("ISLEAF is not null");
			return this;
		}

		public Criteria andIsleafEqualTo(String value) {
			addCriterion("ISLEAF =", value, "isleaf");
			return this;
		}

		public Criteria andIsleafNotEqualTo(String value) {
			addCriterion("ISLEAF <>", value, "isleaf");
			return this;
		}

		public Criteria andIsleafGreaterThan(String value) {
			addCriterion("ISLEAF >", value, "isleaf");
			return this;
		}

		public Criteria andIsleafGreaterThanOrEqualTo(String value) {
			addCriterion("ISLEAF >=", value, "isleaf");
			return this;
		}

		public Criteria andIsleafLessThan(String value) {
			addCriterion("ISLEAF <", value, "isleaf");
			return this;
		}

		public Criteria andIsleafLessThanOrEqualTo(String value) {
			addCriterion("ISLEAF <=", value, "isleaf");
			return this;
		}

		public Criteria andIsleafLike(String value) {
			addCriterion("ISLEAF like", value, "isleaf");
			return this;
		}

		public Criteria andIsleafNotLike(String value) {
			addCriterion("ISLEAF not like", value, "isleaf");
			return this;
		}

		public Criteria andIsleafIn(List values) {
			addCriterion("ISLEAF in", values, "isleaf");
			return this;
		}

		public Criteria andIsleafNotIn(List values) {
			addCriterion("ISLEAF not in", values, "isleaf");
			return this;
		}

		public Criteria andIsleafBetween(String value1, String value2) {
			addCriterion("ISLEAF between", value1, value2, "isleaf");
			return this;
		}

		public Criteria andIsleafNotBetween(String value1, String value2) {
			addCriterion("ISLEAF not between", value1, value2, "isleaf");
			return this;
		}

		public Criteria andSubcountIsNull() {
			addCriterion("SUBCOUNT is null");
			return this;
		}

		public Criteria andSubcountIsNotNull() {
			addCriterion("SUBCOUNT is not null");
			return this;
		}

		public Criteria andSubcountEqualTo(Long value) {
			addCriterion("SUBCOUNT =", value, "subcount");
			return this;
		}

		public Criteria andSubcountNotEqualTo(Long value) {
			addCriterion("SUBCOUNT <>", value, "subcount");
			return this;
		}

		public Criteria andSubcountGreaterThan(Long value) {
			addCriterion("SUBCOUNT >", value, "subcount");
			return this;
		}

		public Criteria andSubcountGreaterThanOrEqualTo(Long value) {
			addCriterion("SUBCOUNT >=", value, "subcount");
			return this;
		}

		public Criteria andSubcountLessThan(Long value) {
			addCriterion("SUBCOUNT <", value, "subcount");
			return this;
		}

		public Criteria andSubcountLessThanOrEqualTo(Long value) {
			addCriterion("SUBCOUNT <=", value, "subcount");
			return this;
		}

		public Criteria andSubcountIn(List values) {
			addCriterion("SUBCOUNT in", values, "subcount");
			return this;
		}

		public Criteria andSubcountNotIn(List values) {
			addCriterion("SUBCOUNT not in", values, "subcount");
			return this;
		}

		public Criteria andSubcountBetween(Long value1, Long value2) {
			addCriterion("SUBCOUNT between", value1, value2, "subcount");
			return this;
		}

		public Criteria andSubcountNotBetween(Long value1, Long value2) {
			addCriterion("SUBCOUNT not between", value1, value2, "subcount");
			return this;
		}

		public Criteria andCreateuseridIsNull() {
			addCriterion("CREATEUSERID is null");
			return this;
		}

		public Criteria andCreateuseridIsNotNull() {
			addCriterion("CREATEUSERID is not null");
			return this;
		}

		public Criteria andCreateuseridEqualTo(String value) {
			addCriterion("CREATEUSERID =", value, "createuserid");
			return this;
		}

		public Criteria andCreateuseridNotEqualTo(String value) {
			addCriterion("CREATEUSERID <>", value, "createuserid");
			return this;
		}

		public Criteria andCreateuseridGreaterThan(String value) {
			addCriterion("CREATEUSERID >", value, "createuserid");
			return this;
		}

		public Criteria andCreateuseridGreaterThanOrEqualTo(String value) {
			addCriterion("CREATEUSERID >=", value, "createuserid");
			return this;
		}

		public Criteria andCreateuseridLessThan(String value) {
			addCriterion("CREATEUSERID <", value, "createuserid");
			return this;
		}

		public Criteria andCreateuseridLessThanOrEqualTo(String value) {
			addCriterion("CREATEUSERID <=", value, "createuserid");
			return this;
		}

		public Criteria andCreateuseridLike(String value) {
			addCriterion("CREATEUSERID like", value, "createuserid");
			return this;
		}

		public Criteria andCreateuseridNotLike(String value) {
			addCriterion("CREATEUSERID not like", value, "createuserid");
			return this;
		}

		public Criteria andCreateuseridIn(List values) {
			addCriterion("CREATEUSERID in", values, "createuserid");
			return this;
		}

		public Criteria andCreateuseridNotIn(List values) {
			addCriterion("CREATEUSERID not in", values, "createuserid");
			return this;
		}

		public Criteria andCreateuseridBetween(String value1, String value2) {
			addCriterion("CREATEUSERID between", value1, value2, "createuserid");
			return this;
		}

		public Criteria andCreateuseridNotBetween(String value1, String value2) {
			addCriterion("CREATEUSERID not between", value1, value2,
					"createuserid");
			return this;
		}
	}

	/**
     * @abatorgenerated */
    public OmGroupExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * @abatorgenerated */
    protected OmGroupExample(OmGroupExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.oracleStart = example.oracleStart;
        this.oracleEnd = example.oracleEnd;
    }

    /**
     * @abatorgenerated */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * @abatorgenerated */
    /**
     * @abatorgenerated */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * @abatorgenerated */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * @abatorgenerated */
    public Integer getOracleStart() {
        return oracleStart;
    }

    /**
     * @abatorgenerated */
    public void setOracleStart(Integer oracleStart) {
        this.oracleStart = oracleStart;
    }

    /**
     * @abatorgenerated */
    public Integer getOracleEnd() {
        return oracleEnd;
    }

    /**
     * @abatorgenerated */
    public void setOracleEnd(Integer oracleEnd) {
        this.oracleEnd = oracleEnd;
    }

    /**
     * 增加整个新查询条件(Criteria)，增加后以or方式查询.
     * @abatorgenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * 创新新Criteria，如果为第一个则加入到Criteria列表。并且返回
     * @abatorgenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * 仅创新新Criteria,并且返回
     * @abatorgenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * 清除查询条件
     * @abatorgenerated
     */
    public void clear() {
        oredCriteria.clear();
    }
}