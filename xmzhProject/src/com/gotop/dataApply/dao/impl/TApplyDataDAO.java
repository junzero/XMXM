package com.gotop.dataApply.dao.impl;

import com.gotop.dataApply.dao.ITApplyDataDAO;
import com.gotop.dataApply.model.TApplyData;
import com.gotop.dataApply.model.TApplyDataExample;
import com.gotop.util.dataSource.SqlMapClientDao;
import com.primeton.utils.Page;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import org.apache.log4j.Logger;

public class TApplyDataDAO extends SqlMapClientDao implements ITApplyDataDAO {
    /**
     * 
     * @abatorgenerated
     */
    protected Logger log = Logger.getLogger(TApplyDataDAO.class);

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table T_APPLY_DATA
     *
     * @abatorgenerated 
     */
    public TApplyDataDAO() {
        super();
    }

    /**
     * 插入一条新数据.
     * @abatorgenerated
     */
    public Long insert(TApplyData record) {
        return (Long) getSqlMapClientTemplate().insert("T_APPLY_DATA_SqlMap.abatorgenerated_insert", record);
    }

    /**
     * 通过主键更新一条全部字段内容
     * @abatorgenerated
     */
    public int updateByPrimaryKey(TApplyData record) {
        int rows = getSqlMapClientTemplate().update("T_APPLY_DATA_SqlMap.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * 通过主键查询一条记录
     * @abatorgenerated
     */
    public TApplyData selectByPrimaryKey(Long daId) {
        TApplyData key = new TApplyData();
        key.setDaId(daId);
        TApplyData record = (TApplyData) queryForObject("T_APPLY_DATA_SqlMap.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

	@Override
	public TApplyData getLeaveByFlowId(String executionId) throws Exception {
		return (TApplyData) queryForObject("T_APPLY_DATA_SqlMap.getLeaveByFlowId", executionId);
	}

	@Override
	public TApplyData getApplyDataAnalyst(Long businessKey) throws Exception {
		return (TApplyData) queryForObject("T_APPLY_DATA_SqlMap.selectDataAnalyst", businessKey);
	}

	@Override
	public TApplyData getApplyAnalyst(Long businessKey) throws Exception {
		return (TApplyData) queryForObject("T_APPLY_DATA_SqlMap.selectAnalyst", businessKey);
	}

	@Override
	public TApplyData getApplyRiskAnalyst(Long businessKey) throws Exception {
		return (TApplyData) queryForObject("T_APPLY_DATA_SqlMap.selectRiskAnalyst", businessKey);
	}

	@Override
	public List<TApplyData> queryAllDataApply(TApplyData applyData, Page page) {
		// TODO 自动生成的方法存根
		if(page!=null)
			return queryForList("T_APPLY_DATA_SqlMap.queryAllDataApply", applyData,page);
		else
			return queryForList("T_APPLY_DATA_SqlMap.queryAllDataApply", applyData);
	}
}