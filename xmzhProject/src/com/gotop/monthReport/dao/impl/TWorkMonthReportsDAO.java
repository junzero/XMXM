package com.gotop.monthReport.dao.impl;

import com.gotop.leave.model.TApplyLeave;
import com.gotop.monthReport.dao.ITWorkMonthReportsDAO;
import com.gotop.monthReport.model.TWorkMonthReports;
import com.gotop.monthReport.model.TWorkMonthReportsExample;
import com.gotop.util.dataSource.SqlMapClientDao;
import com.primeton.utils.Page;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import org.apache.log4j.Logger;

public class TWorkMonthReportsDAO extends SqlMapClientDao implements ITWorkMonthReportsDAO {
    /**
     * @abatorgenerated
     */
    protected Logger log = Logger.getLogger(TWorkMonthReportsDAO.class);

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table T_WORK_MONTH_REPORTS
     *
     * @abatorgenerated 
     */
    public TWorkMonthReportsDAO() {
        super();
    }

    /**
     * 插入一条新数据.
     * @abatorgenerated
     */
    public Long insert(TWorkMonthReports record) {
        return (Long)getSqlMapClientTemplate().insert("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_insert", record);
    }

    /**
     * 通过主键更新一条全部字段内容
     * @abatorgenerated
     */
    public int updateByPrimaryKey(TWorkMonthReports record) {
        int rows = getSqlMapClientTemplate().update("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * 通过主键更新部分字段，部分字段说明：当字段为null时不更新，当字段值为''空值是更新为空值
     * @abatorgenerated
     */
    public int updateByPrimaryKeySelective(TWorkMonthReports record) {
        int rows = getSqlMapClientTemplate().update("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * 通过查询实例，查询记录
     * @abatorgenerated
     */
    public List selectByExample(TWorkMonthReportsExample example) {
        List list = queryForList("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * 通过Map方式的动态条件，查询分页数据
     * @abatorgenerated
     */
    public List selectByMapAndPage(HashMap example) {
        List list = queryForList("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_selectByMapAndPage", example);
        return list;
    }

    /**
     * 通过Bean方式的动态条件，查询分页数据
     * @abatorgenerated
     */
    public List selectByExampleAndPage(TWorkMonthReports record, TWorkMonthReportsExample example, Page page) {
         UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
         List list = queryForList("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_selectByExampleAndPage",parms,page);
        return list;
    }

    /**
     * 根据查询模板的查询结果扩展一个实例
     * @abatorgenerated
     * @param example 条件
     */
    public TWorkMonthReports expandEntityByTemplate(TWorkMonthReports example) {
        TWorkMonthReports result = (TWorkMonthReports)queryForObject("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_expandEntityByTemplate", example);
        return result;
    }

    /**
     * 根据Bean数据模板查询条件查询所有记录
     * @abatorgenerated
     * @param example 条件
     */
    public List queryEntitiesByTemplate(TWorkMonthReports example) {
        List<TWorkMonthReports> result = (List<TWorkMonthReports>)queryForList("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_queryEntitiesByTemplate", example);
        return result;
    }

    /**
     * 根据Bean数据模板分页查询
     * @abatorgenerated
     * @param example 条件
     * @param page 分页信息
     */
    public List queryEntitiesByTemplateWithPage(TWorkMonthReports example, Page page) {
        List<TWorkMonthReports> result = (List<TWorkMonthReports>)queryForList("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_queryEntitiesByTemplate", example,page);
        return result;
    }

    /**
     * 通过主键查询一条记录
     * @abatorgenerated
     */
    public TWorkMonthReports selectByPrimaryKey(Long reportId) {
        TWorkMonthReports key = new TWorkMonthReports();
        key.setReportId(reportId);
        TWorkMonthReports record = (TWorkMonthReports) queryForObject("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * 通过查询实例，删除数据
     * @abatorgenerated
     */
    public int deleteByExample(TWorkMonthReportsExample example) {
        int rows = getSqlMapClientTemplate().delete("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * 根据Bean数据模板查询条件更新记录
     * @abatorgenerated
     * @param example 条件
     */
    public int deleteByTemplate(TWorkMonthReports example) {
        int rows = getSqlMapClientTemplate().delete("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_deleteByTemplate", example);
        return rows;
    }

    /**
     * 通过主键删除一条记录
     * @abatorgenerated
     */
    public int deleteByPrimaryKey(Long reportId) {
        TWorkMonthReports key = new TWorkMonthReports();
        key.setReportId(reportId);
        int rows = getSqlMapClientTemplate().delete("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * 通过查询实例，统计总数
     * @abatorgenerated
     */
    public int countByExample(TWorkMonthReportsExample example) {
        Integer count = (Integer)  queryForObject("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * 通过查询Bean数据模板，统计总数
     * @abatorgenerated
     * @param example 条件
     */
    public int countByTemplate(TWorkMonthReports example) {
        Integer rows = (Integer)queryForObject("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_countByTemplate", example);
        return rows.intValue();
    }

    /**
     * 通过查询实例，更新非null字段
     * @abatorgenerated
     */
    public int updateByExampleSelective(TWorkMonthReports record, TWorkMonthReportsExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * 通过查询实例，更新全部字段
     * @abatorgenerated
     */
    public int updateByExample(TWorkMonthReports record, TWorkMonthReportsExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * 根据Bean数据模板查询条件更新记录
     * @abatorgenerated
     * @param record 值
     * @param example 条件
     */
    public int updateEntityByTemplate(TWorkMonthReports record, TWorkMonthReports example) {
        HashMap<String,TWorkMonthReports> params = new HashMap<String,TWorkMonthReports>();
        params.put("record", record);
        params.put("template", example);
        int rows = getSqlMapClientTemplate().update("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_updateEntityByTemplate", params);
        return rows;
    }

    /**
     * 分页查询信息
     * @abatorgenerated
     */
    public List selectByDynamic(HashMap map, Page page) throws Exception {
        List list = queryForList("T_WORK_MONTH_REPORTS_SqlMap.abatorgenerated_selectByDynamic", map, page);
        return list;
    }

    /**
     * This class was generated by Abator for iBATIS. This class corresponds to the database table T_WORK_MONTH_REPORTS
     * @abatorgenerated  
     */
    private static class UpdateByExampleParms extends TWorkMonthReportsExample {
        private Object record;

        public UpdateByExampleParms(Object record,
                TWorkMonthReportsExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

    
    /**
     * 
     *
     * TODO 动态查询，分页查询数据并返回list.
     *
     * @param monthReports
     * @param page
     * @return
     *
     * <pre>
     * 修改日期        修改人    修改原因
     * 2014-7-30    yyx    新建
     * </pre>
     */
    @Override
    public List<TWorkMonthReports> queryMessagePublishList(
            TWorkMonthReports monthReports, Page page) {
        // TODO Auto-generated method stub
        return null;
    }

    /**
     *
     * TODO 获取月报详情.
     *
     * @param reportId
     * @return
     *
     * <pre>
     * 修改日期        修改人    修改原因
     * 2014-7-31    yyx    新建
     * </pre>
     */
    @Override
    public TWorkMonthReports queryMonthReportInfo(Long reportId) {
        System.out.println(reportId);
        if (reportId!=null&&!"".equals(reportId)) {
            TWorkMonthReports monthReports =new TWorkMonthReports();
            monthReports=(TWorkMonthReports) queryForObject("T_WORK_MONTH_REPORTS_SqlMap.getByReportId", reportId);
            return monthReports;
        } else {
            return null;
        }
    }

    @Override
    public TWorkMonthReports getMonthReportByFlowId(String flowId) {
        if (flowId!=null&&!"".equals(flowId)) {
            TWorkMonthReports monthReports=(TWorkMonthReports) queryForObject("T_WORK_MONTH_REPORTS_SqlMap.getByFlowId", flowId);
            return monthReports;
        } else {
            return null;
        }
    }
    
    /**
     * 
     *
     * TODO 根据主键更改月报.
     *
     * @param monthReports
     *
     * <pre>
     * 修改日期        修改人    修改原因
     * 2014-7-31    yyx    新建
     * </pre>
     */
    @Override
    public void update(TWorkMonthReports monthReports) {
        update("T_WORK_MONTH_REPORTS_SqlMap.updateById", monthReports);
    }
}