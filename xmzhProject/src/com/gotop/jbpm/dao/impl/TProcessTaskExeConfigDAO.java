package com.gotop.jbpm.dao.impl;

import com.gotop.jbpm.dao.ITProcessTaskExeConfigDAO;
import com.gotop.jbpm.model.TProcessTaskExeConfig;
import com.gotop.jbpm.model.TProcessTaskExeConfigExample;
import com.gotop.util.dataSource.SqlMapClientDao;
import com.primeton.utils.Page;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.log4j.Logger;

public class TProcessTaskExeConfigDAO extends SqlMapClientDao implements ITProcessTaskExeConfigDAO {
    /**
     * 
     * @abatorgenerated
     */
    protected Logger log = Logger.getLogger(TProcessTaskExeConfigDAO.class);

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table T_PROCESS_TASK_EXE_CONFIG
     *
     * @abatorgenerated 
     */
    public TProcessTaskExeConfigDAO() {
        super();
    }

    /**
     * 插入一条新数据.
     * @abatorgenerated
     */
    public void insert(TProcessTaskExeConfig record) {
        getSqlMapClientTemplate().insert("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_insert1", record);
    }

    /**
     * 通过主键更新一条全部字段内容
     * @abatorgenerated
     */
    public int updateByPrimaryKey(TProcessTaskExeConfig record) {
        int rows = getSqlMapClientTemplate().update("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * 通过主键更新部分字段，部分字段说明：当字段为null时不更新，当字段值为''空值是更新为空值
     * @abatorgenerated
     */
    public int updateByPrimaryKeySelective(TProcessTaskExeConfig record) {
        int rows = getSqlMapClientTemplate().update("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * 通过查询实例，查询记录
     * @abatorgenerated
     */
    public List selectByExample(TProcessTaskExeConfigExample example) {
        List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * 通过Map方式的动态条件，查询分页数据
     * @abatorgenerated
     */
    public List selectByMapAndPage(HashMap example) {
        List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_selectByMapAndPage", example);
        return list;
    }

    /**
     * 通过Bean方式的动态条件，查询分页数据
     * @abatorgenerated
     */
    public List selectByExampleAndPage(TProcessTaskExeConfig record, TProcessTaskExeConfigExample example, Page page) {
         UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
         List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_selectByExampleAndPage",parms,page);
        return list;
    }

    /**
     * 根据查询模板的查询结果扩展一个实例
     * @abatorgenerated
     * @param example 条件
     */
    public TProcessTaskExeConfig expandEntityByTemplate(TProcessTaskExeConfig example) {
        TProcessTaskExeConfig result = (TProcessTaskExeConfig)queryForObject("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_expandEntityByTemplate", example);
        return result;
    }

    /**
     * 根据Bean数据模板查询条件查询所有记录
     * @abatorgenerated
     * @param example 条件
     */
    public List queryEntitiesByTemplate(TProcessTaskExeConfig example) {
        List<TProcessTaskExeConfig> result = (List<TProcessTaskExeConfig>)queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_queryEntitiesByTemplate", example);
        return result;
    }

    /**
     * 根据Bean数据模板分页查询
     * @abatorgenerated
     * @param example 条件
     * @param page 分页信息
     */
    public List queryEntitiesByTemplateWithPage(TProcessTaskExeConfig example, Page page) {
        List<TProcessTaskExeConfig> result = (List<TProcessTaskExeConfig>)queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_queryEntitiesByTemplate", example,page);
        return result;
    }

    /**
     * 通过主键查询一条记录
     * @abatorgenerated
     */
    public TProcessTaskExeConfig selectByPrimaryKey(Long id) {
        TProcessTaskExeConfig key = new TProcessTaskExeConfig();
        key.setId(id);
        TProcessTaskExeConfig record = (TProcessTaskExeConfig) queryForObject("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * 通过查询实例，删除数据
     * @abatorgenerated
     */
    public int deleteByExample(TProcessTaskExeConfigExample example) {
        int rows = getSqlMapClientTemplate().delete("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * 根据Bean数据模板查询条件更新记录
     * @abatorgenerated
     * @param example 条件
     */
    public int deleteByTemplate(TProcessTaskExeConfig example) {
        int rows = getSqlMapClientTemplate().delete("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_deleteByTemplate", example);
        return rows;
    }

    /**
     * 通过主键删除一条记录
     * @abatorgenerated
     */
    public int deleteByPrimaryKey(Long id) {
        TProcessTaskExeConfig key = new TProcessTaskExeConfig();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * 通过查询实例，统计总数
     * @abatorgenerated
     */
    public int countByExample(TProcessTaskExeConfigExample example) {
        Integer count = (Integer)  queryForObject("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * 通过查询Bean数据模板，统计总数
     * @abatorgenerated
     * @param example 条件
     */
    public int countByTemplate(TProcessTaskExeConfig example) {
        Integer rows = (Integer)queryForObject("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_countByTemplate", example);
        return rows.intValue();
    }

    /**
     * 通过查询实例，更新非null字段
     * @abatorgenerated
     */
    public int updateByExampleSelective(TProcessTaskExeConfig record, TProcessTaskExeConfigExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * 通过查询实例，更新全部字段
     * @abatorgenerated
     */
    public int updateByExample(TProcessTaskExeConfig record, TProcessTaskExeConfigExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * 根据Bean数据模板查询条件更新记录
     * @abatorgenerated
     * @param record 值
     * @param example 条件
     */
    public int updateEntityByTemplate(TProcessTaskExeConfig record, TProcessTaskExeConfig example) {
        HashMap<String,TProcessTaskExeConfig> params = new HashMap<String,TProcessTaskExeConfig>();
        params.put("record", record);
        params.put("template", example);
        int rows = getSqlMapClientTemplate().update("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_updateEntityByTemplate", params);
        return rows;
    }

    /**
     * 分页查询信息
     * @abatorgenerated
     */
    public List selectByDynamic(HashMap map, Page page) throws Exception {
        List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_selectByDynamic", map, page);
        return list;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table T_PROCESS_TASK_EXE_CONFIG
     *
     * @abatorgenerated 
     */
    private static class UpdateByExampleParms extends TProcessTaskExeConfigExample {
        private Object record;

        public UpdateByExampleParms(Object record, TProcessTaskExeConfigExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }

	@Override
	public List<TProcessTaskExeConfig> getNextTaskAssigneeConfigs(
			Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getNextTaskAssigneeConfigs", map);
        return list;
	}

	@Override
	public List<Map<String, Object>> getEmpPosition(Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getEmpPosition", map);
        return list;
	}

	@Override
	public List<Map<String, Object>> getEmpOrg(Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getEmpOrg", map);
        return list;
	}

	@Override
	public List<Map<String, Object>> getEmpRole(Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getEmpRole", map);
        return list;
	}

	@Override
	public List<Map<String, Object>> getEmp(Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getEmp", map);
        return list;
	}

	@Override
	public List<Map<String, Object>> getEmpPositionByOrg(Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getEmpPositionByOrg", map);
        return list;
	}

	@Override
	public List<Map<String, Object>> getEmpOrgByPosition(Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getEmpOrgByPosition", map);
        return list;
	}

	@Override
	public TProcessTaskExeConfig getTaskExeConfig(Map<String, Object> map) {
		TProcessTaskExeConfig tProcessTaskExeConfig = null;
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getTaskExeConfig", map);
		if(list.size() != 0){
			tProcessTaskExeConfig = (TProcessTaskExeConfig) list.get(0);
		}
        return tProcessTaskExeConfig;
	}

	@Override
	public List<Map<String, Object>> getPosition(Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getPosition", map);
        return list;
	}

	@Override
	public List<Map<String, Object>> getOrg(Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getOrg", map);
        return list;
	}

	@Override
	public List<Map<String, Object>> getEmp1(Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getEmp1", map);
        return list;
	}

	@Override
	public List<Map<String, Object>> getEmpOrgByMain(Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getEmpOrgByMain", map);
        return list;
	}

	@Override
	public List<TProcessTaskExeConfig> getNextTaskAssigneeConfigs2(
			Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.getNextTaskAssigneeConfigs2", map);
        return list;
	}

	@Override
	public List<TProcessTaskExeConfig> judgeTaskNameConfig(
			Map<String, Object> map) {
		List list = queryForList("T_PROCESS_TASK_EXE_CONFIG_SqlMap.judgeTaskNameConfig", map);
        return list;
	}

	@Override
	public void updateByPrimaryKey1(TProcessTaskExeConfig config) {
		getSqlMapClientTemplate().update("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_updateByPrimaryKey1", config);
	}

	@Override
	public void insert1(TProcessTaskExeConfig config) {
		 getSqlMapClientTemplate().insert("T_PROCESS_TASK_EXE_CONFIG_SqlMap.abatorgenerated_insert1", config);
	}
}